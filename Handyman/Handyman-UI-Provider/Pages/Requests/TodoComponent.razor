@page "/todocomponent"
@using HandymanProviderLibrary.Api.Request
@using HandymanProviderLibrary.Models
@inject IRequestEndPoint _requestEndPoint
@inject NavigationManager NavManager
@implements IDisposable

@if (todoItemDisplay != null)
{
    if(@isStatusChanged)
    {
        <div class="alert alert-primary alert-dismissible fade show" role="alert">
            <svg class="bi flex-shrink-0 me-2" role="img" aria-label="Info:"><use xlink:href="#info-fill" /></svg>
            <h4 class="alert-heading"><strong>Status Changed!</strong></h4>
            <div class="justify-content-end">
                <img src="./Images/hourglass.gif" class="w-10 h-10">
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="card text-center">

        <div class="form-check-inline alert-success">
            <h5 class="card-title">@todoItemDisplay.ItemName</h5>
        </div>

            @if (@IsFinished)
            {
            <div class="card-body-inline alert-success">
                
                <p class="card-text">@todoItemDisplay.Description</p>
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" disabled>
                    <label class="form-check-label" for="exampleRadios1">
                        Viewed
                    </label>
                </div>
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2" disabled>
                    <label class="form-check-label" for="exampleRadios2">
                        Start
                    </label>
                </div>
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3" checked>
                    <label class="form-check-label" for="exampleRadios3">
                        Finish
                    </label>
                </div>
                <a href="#" class="btn btn-primary">Close</a>
            </div>
            }else if(IsStarted)
            {
            <div class="card-body-inline">
            
                    <p class="card-text">@todoItemDisplay.Description</p>
            <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" disabled>
                <label class="form-check-label" for="exampleRadios1">
                    Viewed
                </label>
            </div>
            <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2" checked disabled>
                <label class="form-check-label" for="exampleRadios2">
                    Started
                </label>
            </div>

            <div class="form-check-inline">
                <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3" disabled>
                <label class="form-check-label" for="exampleRadios3">
                    Finish
                </label>
            </div>
            <hr/>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-hammer" viewBox="0 0 16 16">
                        <path d="M9.972 2.508a.5.5 0 0 0-.16-.556l-.178-.129a5.009 5.009 0 0 0-2.076-.783C6.215.862 4.504 1.229 2.84 3.133H1.786a.5.5 0 0 0-.354.147L.146 4.567a.5.5 0 0 0 0 .706l2.571 2.579a.5.5 0 0 0 .708 0l1.286-1.29a.5.5 0 0 0 .146-.353V5.57l8.387 8.873A.5.5 0 0 0 14 14.5l1.5-1.5a.5.5 0 0 0 .017-.689l-9.129-8.63c.747-.456 1.772-.839 3.112-.839a.5.5 0 0 0 .472-.334z" />
                    </svg>
                </button>
                </div>
            }else
            {
            <div class="card-body-inline">
                
                <p class="card-text">@todoItemDisplay.Description</p>
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" disabled>
                    <label class="form-check-label" for="exampleRadios1">
                        Viewed
                    </label>
                </div>
                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2" checked>
                    <label class="form-check-label" for="exampleRadios2">
                        Start
                    </label>
                </div>

                <div class="form-check-inline">
                    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3" disabled>
                    <label class="form-check-label" for="exampleRadios3">
                        Finish
                    </label>
                </div>
                <hr />
                <button type="button" @onclick="StartTodoItem" class="btn btn-primary" id="liveAlertBtn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-hammer" viewBox="0 0 16 16">
                        <path d="M9.972 2.508a.5.5 0 0 0-.16-.556l-.178-.129a5.009 5.009 0 0 0-2.076-.783C6.215.862 4.504 1.229 2.84 3.133H1.786a.5.5 0 0 0-.354.147L.146 4.567a.5.5 0 0 0 0 .706l2.571 2.579a.5.5 0 0 0 .708 0l1.286-1.29a.5.5 0 0 0 .146-.353V5.57l8.387 8.873A.5.5 0 0 0 14 14.5l1.5-1.5a.5.5 0 0 0 .017-.689l-9.129-8.63c.747-.456 1.772-.839 3.112-.839a.5.5 0 0 0 .472-.334z" />
                    </svg>
                </button>

            </div>

        }
       
        <div class="card-footer text-muted">
                @(
                     DateTime.UtcNow - todoItemDisplay.StartDate
                 ) 
        </div>
    </div>

}

@code {

    bool IsFinished;
    bool IsStarted;
    bool isStatusChanged;

    TodoModel? todoItemDisplay;

    [Parameter]
    [SupplyParameterFromQuery(Name = "Id")]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(Id is not null)
            todoItemDisplay = await _requestEndPoint.GetTodoItemById(Id.Value);
    }

    void StartTodoItem()
    {
        IsStarted = true;
        isStatusChanged = true;
    }

    void Holaa()
    {

    }

    void GoBackToRequest()
    {
        if(isStatusChanged)
        {
            //warning of unsaved changes
        }
    }

    public void Dispose()
    {

    }
}