@inject NavigationManager NavManager

@code {
    private string? returnUrl;

    [Parameter]
    public string? ReturnUrl { get { return returnUrl; } set { returnUrl = value; } }
    protected override async Task OnInitializedAsync()
    {

        if (string.IsNullOrEmpty(returnUrl))
        {
            returnUrl = "";
        }
        try
        {
            NavManager.NavigateTo($"sign-in?returnUrl={returnUrl}", true, true);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }


    }
}