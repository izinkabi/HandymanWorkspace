@page "/sign-in"

@inject IJSRuntime JS 

<div class="container">
    <div class="signin-signup">
        <form action="#" class="sign-in-form">
            <h2 class="title">Sign In</h2>
            <div class="input-field">
                <i class="fas fa-user"></i>
                <input type="text" placeholder="Username">
            </div>
            <div class="input-field">
                <i class="fas fa-lock"></i>
                <input type="password" placeholder="Password">
            </div>
            <input type="submit" value="Login" class="login-btn">
            <p class="social-text">Or Sign In with socail platforms</p>
            <div class="social-media">
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
            </div>
        </form>
        <form action="RegisterProfile" class="sign-up-form">
            <h2 class="title">Sign Up</h2>
            <div class="input-field">
                <i class="fas fa-user"></i>
                <input type="text" placeholder="Username">
            </div>
            <div class="input-field">
                <i class="fas fa-envelope"></i>
                <input type="text" placeholder="Email">
            </div>
            <div class="input-field">
                <i class="fas fa-lock"></i>
                <input type="password" placeholder="Password">
            </div>
            <input type="submit" value="Regiater" class="login-btn">
            <p class="social-text">Or Sign Up with socail platforms</p>
            <div class="social-media">
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="" class="social-icon">
                    <i class="fab fa-facebook"></i>
                </a>
            </div>
        </form>
    </div>
    <div class="panels-container">
        <div class="panel left-panel">
            <div class="content">
                <h3>Member of Brand</h3>
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos possimus odio laudantium nobis ad, iure ratione ea? Similique doloribus modi delectus, pariatur illo quaerat nulla exercitationem consequatur, magni natus doloremque.</p>
                <button class="login-btn" id="sign-in-btn">Sign in</button>
            </div>
            <img src="/img/bg-auth/signin.svg" alt="" class="image">
        </div>
        <div class="panel right-panel">
            <div class="content">
                <h3>New to Brand</h3>
                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos possimus odio laudantium nobis ad, iure ratione ea? Similique doloribus modi delectus, pariatur illo quaerat nulla exercitationem consequatur, magni natus doloremque.</p>
                <button class="login-btn" @onclick="swapSlide" id="sign-up-btn">Sign up</button>
            </div>
            <img src="/img/bg-auth/signup.svg" alt="" class="image">
        </div>
    </div>
</div>

@code {
    private IJSObjectReference? moduleReference;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
           try
            {
                moduleReference = await JS.InvokeAsync<IJSObjectReference>("import", "/js/Auth.js");
            }
            catch (Exception ex)
            {
                    
                throw new Exception(ex.Message);
            }
        }
    }
    [JSInvokable]
    private async Task swapSlide()
    {
        if (moduleReference!=null)
        {
           await moduleReference.InvokeVoidAsync("swapLogin");
        }
    }
}
