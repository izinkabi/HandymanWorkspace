@page "/service-provider"
@page "/provider"

@using HandymanProviderLibrary.Models;
@using Handyman_SP_UI.Pages.Businesses.EmployeeComponent;
@inherits Employees

<AuthorizeView>
     <Authorized>

    @if (context.User.IsInRole("ServiceProvider"))
    {
    <div class="d-flex text-muted pt-3">
        <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#007bff" /><text x="50%" y="50%" fill="#007bff" dy=".3em">32x32</text></svg>

        <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
            <span class="d-block">@serviceProvider.Services.ElementAt(0).category.name</span>   <!--Should be a provider job title-->
        </div>
    </div>

    <div class="row mb-2">
       
    </div>
       }
        else
        {
        
               <TestProfile>

               </TestProfile>
            
        }

     </Authorized>
    <NotAuthorized>
                <p>Not authorized!!!</p>
    </NotAuthorized>
</AuthorizeView>

@code {

    static ServiceProviderModel? providerModel;
    string? ErrorMsg = "something is wrong";
    protected override async Task OnInitializedAsync()
    {

    }


    [Parameter]
    public ServiceProviderModel? serviceProvider { get => _  = providerModel; set {providerModel=value; } }
}
