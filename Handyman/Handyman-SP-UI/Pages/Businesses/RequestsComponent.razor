@page "/requests"
@page "/requests-all"

@using Handyman_SP_UI.Pages.Services
@using Microsoft.AspNetCore.Components.Web

@inject NavigationManager NavManager
@inject IRequestHelper _requestHelper
@inject IBusinessHelper _businessHelper

<AuthorizeView>

<Authorized>
        @if (newRequests != null)
        {
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">       
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <div class="btn-group me-2">
                            <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
                            <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
                        </div>
                        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
                            <span data-feather="calendar" class="align-text-bottom"></span>
                            This week
                        </button>
                    </div>
                </div>
                <!--Table-->
                <div class="table-responsive">
                    <table class="table table-striped table-sm table-hover table-responsive">
                        <!--Table header-->
                        <thead>
                            <tr>
                                <th scope="col">#</th>

                                <th scope="col">Date placed</th>
                                <th scope="col">Category</th>
                                <th scope="col">Request title</th>
                            </tr>
                        </thead>
                    @if (@newRequests.Count > 0)
                    {
                                <!--Table body-->
                                <tbody>
                                    <!--Rows-->
                            @foreach (var nr in @newRequests)
                            {
                                @if (nr.status < 2)
                                {
                                    <tr onclick="@(()=> viewNewRequest(@nr.service.id,@nr.Id))">
                                        <!--Onclick test-->

                                        <td>@nr.status</td>
                                        <td>@nr.datecreated</td>
                                        <td>@nr.service.category.name</td>
                                        <td>@nr.service.name</td>
                                    </tr>
                                }
                            }


                    <!--End rows-->
                            </tbody>
                    }
              <!--End body-->
            </table>
            <!--End table-->
          </div>
                <div class="b-example-divider b-example-vr"></div>


                <!--Own requests -->
                <h4 class="fa-square-font-awesome">Own Requests</h4>
            <table class="table table-hover table-bordered align-middle">
                    <thead>
                        <tr>
                           
                            <th scope="col">Completion</th>
                            <th scope="col">Date Accepted</th>

                        </tr>
                    </thead>
                @if (requests != null && requests.Count > 0)
                {
                    <tbody> 
                        
                        @foreach (var request in requests)
                        {

                            @if(request.req_status == 3)
                            {
                                <tr class="table-secondary" @onclick="@(()=>viewOwnRequest(@request.req_id))">
                                <td>@request.req_progress%</td>
                                <td>@request.req_datecreated</td>

                                </tr>
                            }
                            @if (request.req_status == 2)
                            {
                                <tr class="table-warning" @onclick="@(()=>viewOwnRequest(@request.req_id))">

                                    
                                    <td>@request.req_progress%</td>
                                    <td>@request.req_datecreated</td>

                                </tr>
                            }
                            @if (request.req_status == 1)
                            {
                                <tr class="table-light" @onclick="@(()=>viewOwnRequest(@request.req_id))">

                                    
                                    <td>@request.req_progress%</td>
                                    <td>@request.req_datecreated</td>

                                </tr>
                            }
                        }

                    </tbody>
                }
                    </table>

                    <!--End Own requests-->
        }
      @*  else
        {
                <div class="d-flex justify-content-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                        <h4>Loading</h4>
                    </div>
                </div>
        }*@
   </Authorized>
    <NotAuthorized>
        <ServicesAlbum>

        </ServicesAlbum>
    </NotAuthorized>
    </AuthorizeView>

@code {

    List<OrderModel>? newRequests;
    IList<RequestModel>? requests;

    ServiceProviderModel? provider;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadOwnRequests();
            await LoadNewRequests();

            if(requests!=null && requests.Count>0)
                foreach (var r in requests)
                {
                    r.req_status = _requestHelper.CheckStatus(r);
                    r.req_progress = _requestHelper.GetProgress(r);
                }

        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message, ex.InnerException);
        }
    }

    void viewNewRequest(int sid, int rid)
    {
        NavManager.NavigateTo(NavManager.GetUriWithQueryParameters("request", new Dictionary<string, object>()
            {
                ["SId"] = sid,
                ["NRId"] = rid
            }));
    }

    void viewOwnRequest(int ownRId)
    {
        NavManager.NavigateTo(NavManager.GetUriWithQueryParameters("request", new Dictionary<string, object>()
            {
                ["ORId"] = ownRId,

            }));
    }


    async Task LoadNewRequests()
    {
        provider = await _businessHelper.GetProvider();
        newRequests = new()!;
        if (provider != null)

            foreach (var service in provider.Services)
            {
                newRequests.AddRange(await _requestHelper.GetNewRequests(service.id));
            }
    }

    //Get All the accepted requests
    async Task LoadOwnRequests()
    {
        try
        {
            requests = await _requestHelper.GetOwnRequests();
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message, ex.InnerException);
        }
    }
}