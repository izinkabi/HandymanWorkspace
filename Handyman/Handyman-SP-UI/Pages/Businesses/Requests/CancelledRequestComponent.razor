@page "/cancelled-request"
@page "/cancelled-r"

@inject IProviderHelper _providerHelper
@inject IRequestHelper _requestHelper



    @if (cancelledRequest != null)
    {
        <div class="bg-opacity-50 card rounded-3 shadow-sm border-0 text-center">
        @if (cancelledRequest.Service != null)
        {

            <div class="card-header bg-danger bg-opacity-25 py-3">
                    <h4 class="my-0 fw-normal font-monospace alert-danger text-center">@CancelledRequest.Service.name</h4>
                <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
                    <span class="visually-hidden">New alerts</span>
                </span>
            </div>

            <div class="card-body ">
                <h1 class="card-title pricing-card-title"></h1>
                <ul class="list-unstyled mt-3 mb-4">
                        <li>@cancelledRequest.req_datecreated</li>
                        <li>@cancelledRequest.req_status</li>
                </ul>

            </div>
        
        }else{
                
            <p>service is null</p>        
        }

        </div>

    }
    @if (cancelledRequest == null)
    {
        <div class="card" aria-hidden="true">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title placeholder-glow">
                    <span class="placeholder col-6"></span>
                </h5>
                <p class="card-text placeholder-glow">
                    <span class="placeholder col-7"></span>
                    <span class="placeholder col-4"></span>
                    <span class="placeholder col-4"></span>
                    <span class="placeholder col-6"></span>
                    <span class="placeholder col-8"></span>
                </p>
                <a href="#" tabindex="-1" class="btn btn-primary disabled placeholder col-6"></a>
            </div>
        </div>
    }

           

@code {
    private RequestModel? cancelledRequest;
    int requestId;

    [Parameter]
    public RequestModel CancelledRequest 
    {
        get { return cancelledRequest; }
        set { cancelledRequest = value; }
    }

    [Parameter]
    [SupplyParameterFromQuery]
    public int CRId { get { return requestId; } set {requestId = value; } }

    //protected override async Task OnInitializedAsync()
    //{
    //    try
    //    {

    //        if (requestId != 0 && cancelledRequest == null)
    //        {
    //            cancelledRequest = await _requestHelper.GetOwnRequest(requestId);
    //        }
    //        //return Task.FromResult;
           
    //    }
    //    catch (Exception ex)
    //    {
            
    //        throw new Exception(ex.Message,ex.InnerException);
    //    }
        
    //}
}
