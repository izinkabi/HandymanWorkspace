@page "/profile-register"

@inject IJSRuntime JS 
@inject NavigationManager NavManager
@inject IProviderHelper _providerHelper

@if (!IsSubmitted)
{
    <div class="container">
        <div class="profile">
            @*-----Profile Form-----*@
            <EditForm Model="newProfile" class="profile-form" target="_blank" autocomplete="on" validate>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <h2 class="title">Profile Infomation</h2>
                <div class="input-field">
                    <i class="fas fa-user"></i>
                    <input type="text" @bind-value="newProfile.Names" placeholder="Names"  required >
                </div>
                <div class="input-field">
                    <i class="fas fa-user"></i>
                    <input type="text" @bind-value="newProfile.Surname" placeholder="Last Name" required>
                </div>
                <div class="input-field">
                    <i class="fas fa-user"></i>
                    <input type="date" @bind-value="newProfile.DateOfBirth" placeholder="DateOfBirth" required >
                </div>
                <div class="input-field">
                    <i class="fas fa-user"></i>
                    <input type="tel" @bind-value="newProfile.PhoneNumber" placeholder="Cell Number" required >
                </div>


                <select @bind="newProfile.Gender">
                    <option>--Gender--</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                </select>
                

                <button type="submit" @onclick="swapSlide" class="create-btn" id="sign-up-btn">Next</button>
            </EditForm>
            
            <EditForm Model="newProfile.Address" OnValidSubmit="SaveProfile" class="email-confirm-form">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <h2 class="title">Add Address</h2>
                <div class="input-field">
                    <i class="fas fa-mouse-pointer"></i>
                    <input type="text" @bind-value="newProfile.Address.add_street" placeholder="Street Address">
                </div>
                <div class="input-field">
                    <i class="fas fa-location"></i>
                    <input type="text" @bind-value="newProfile.Address.add_suburb" placeholder="Surburb/Town">
                </div>
                <div>
                    <i class="fas fa-map"></i>
                    <select @bind="newProfile.Address.add_country">
                        <option value="" >--Country--</option>
                        <option value="South Africa" >South Africa</option>
                    </select>
                </div>
                <div>
                    <i class="fas fa-house"></i>
                    <select type="text" @bind="newProfile.Address.add_state" placeholder="State">
                        <option value="">--Province--</option>
                        <option value="Western Cape">Western Cape</option>
                        <option value="Gauteng">Gauteng</option>
                        <option value="Mpumalanga">Mpumalanga</option>
                        <option value="KZN">KZN</option>
                        <option value="Eastern Cape">Eastern Cape</option>
                    </select>
                </div>
                <div>
                    <i class="fas fa-address-book"></i>
                    <select type="text" @bind="newProfile.Address.add_city" placeholder="City">
                        <option value="" >--City--</option>
                        <option value="Cape Town" >Cape Town</option>
                        <option value="Johannesburg">Johannesburg</option>
                        <option value="WitBank">WitBank</option>
                        <option value="Durban">Durban</option>
                        <option value="Gqeberha">Gqeberha</option>
                    </select>
                </div>
             
                
                
                <input type="submit" value="Submit" class="create-btn">
                <p class="social-text">social platforms</p>
                <div class="social-media">
                    <a href="" class="social-icon">
                        <i class="fab fa-facebook"></i>
                    </a>
                    <a href="" class="social-icon">
                        <i class="fab fa-twitter"></i>
                    </a>
                    <a href="" class="social-icon">
                        <i class="fab fa-linkedin"></i>
                    </a>
                    <a href="" class="social-icon">
                        <i class="fab fa-telegram"></i>
                    </a>
                </div>
            </EditForm>
        </div>
        <div class="panels-container">
            <div class="panel left-panel">
                <div class="content">
                    <h3>Member of Brand</h3>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos possimus odio laudantium nobis ad, iure ratione ea? Similique doloribus modi delectus, pariatur illo quaerat nulla exercitationem consequatur, magni natus doloremque.</p>
                    <button class="create-btn" id="sign-in-btn">back</button>
                </div>
                <img src="/img/bg-auth/signin.svg" alt="" class="image">
            </div>
            <div class="panel right-panel">
                <div class="content">
                    <h3>New to Brand</h3>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos possimus odio laudantium nobis ad, iure ratione ea? Similique doloribus modi delectus, pariatur illo quaerat nulla exercitationem consequatur, magni natus doloremque.</p>
                </div>
                <img src="/img/bg-auth/signin.svg" alt="" class="image">
            </div>
        </div>
    </div>

}
else
{
    <Loader />
}
@code {


    /// <summary>
    /// Locals
    /// </summary>
    private ProfileModel newProfile = new ProfileModel() { DateOfBirth= DateTime.Now};
    private IJSObjectReference? moduleReference;
    private List<string> Errors = new List<string>()!;
    private bool IsSubmitted;
    private string? userId;

    [Parameter]
    [SupplyParameterFromQuery(Name ="UID")]
    public string? UserId
    {
        get { return userId; }
        set { userId = value; }
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            try
            {
                moduleReference = await JS.InvokeAsync<IJSObjectReference>("import", "/js/ProfileRegister.js");
            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message);
            }
        }
    }


    private async Task swapSlide()
    {
        if (moduleReference!=null)
        {
            await moduleReference.InvokeVoidAsync("swapLogin");
        }
    }

    /// <summary>
    /// Assign the gender 
    /// </summary>
    /// <param name="gender"></param>
    private void AssignGender(string gender)
    {
        if (!string.IsNullOrEmpty(gender))
        {
            newProfile.Gender = gender;
        }

    }

    /// <summary>
    /// Save the profile of the new user
    /// </summary>
    private async void SaveProfile()
    {
        try
        {
            if (userId != null)
            {
                newProfile.UserId = userId;
            }
            
            var IsValidResponse = await _providerHelper.RegisterProfile(newProfile);
            if (IsValidResponse)
            {
                NavManager.NavigateTo("/", true);
            }
        }
        catch (Exception ex)
        {

            Errors.Add(ex.Message);
        }

    }
}
