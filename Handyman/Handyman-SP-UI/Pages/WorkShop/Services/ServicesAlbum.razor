@page "/services-album"
@page "/servicists"

@using Microsoft.AspNetCore.Components.Web
@inject IServiceEndpoint _serviceEP
@inject IProviderHelper _proHelper
@inject NavigationManager NavManager

<div class="service-container">
    <div class="service-status">
        <div class="service-card">
            <h4>Service Status:</h4>
            <ul>
                <li>Active</li>
                <li>Inactive</li>
                <li> Approval</li>
                <li>Approved</li>
                <li>Rejected</li>
            </ul>
        </div>
        <div class="service-card">
            <h4>Service Status:</h4>
            <ul>
                <li>Active</li>
                <li>Inactive</li>
                <li>Pending Approval</li>
                <li>Approved</li>
                <li>Rejected</li>
            </ul>
        </div>
    </div>
    <div class="service-functions">
        <div class="service-card">
            <h4>Service Status:</h4>
            <ul>
                <li>Active</li>
                <li>Inactive</li>
                <li> Approval</li>
                <li>Approved</li>
                <li>Rejected</li>
            </ul>
        </div>
        <div class="service-card">
            <h4>Service Status:</h4>
            <ul>
                <li>Active</li>
                <li>Inactive</li>
                <li>Pending Approval</li>
                <li>Approved</li>
                <li>Rejected</li>
            </ul>
        </div>
    </div>
    <div class="services-table">
        <table class="blueTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Type</th>
                    <th>Status</th>
                    <th>Price</th>
                    <th>Date Created</th>
                    <th>Description</th>
                    <th>Image</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <td colspan="10">
                        <div class="links"><a href="#">&laquo;</a> <a class="active" href="#">1</a> <a href="#">2</a> <a href="#">3</a> <a href="#">4</a> <a href="#">&raquo;</a></div>
                    </td>
                </tr>
            </tfoot>
            <tbody>
                <tr>
                    <td>Wall Painting</td>
                    <td>Renovations and Remodeling</td>
                    <td>in-house</td>
                    <td>Available</td>
                    <td>R800.00</td>
                    <td>12-10-2023</td>
                    <td>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Impedit itaque, cumque consequuntur</td>
                    <td><img src="#" alt=""></td>
                    <td><i class="fa-regular fa-trash-can fa-1x"></i></td>
                    <td><i class="fa-regular fa-clipboard fa-1x"></i></td>
                    <td><i class="fa-regular fa-pen-to-square fa-1x"></i></td>
                </tr>
                <tr>
                    <td>Wall Painting</td>
                    <td>Renovations and Remodeling</td>
                    <td>in-house</td>
                    <td>Available</td>
                    <td>R800.00</td>
                    <td>12-10-2023</td>
                    <td>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Impedit itaque, cumque consequuntur</td>
                    <td><img src="#" alt=""></td>
                    <td><i class="fa-regular fa-trash-can fa-1x"></i></td>
                    <td><i class="fa-regular fa-clipboard fa-1x"></i></td>
                    <td><i class="fa-regular fa-pen-to-square fa-1x"></i></td>
                </tr>
                <tr>
                    <td>Wall Painting</td>
                    <td>Renovations and Remodeling</td>
                    <td>in-house</td>
                    <td>Available</td>
                    <td>R800.00</td>
                    <td>12-10-2023</td>
                    <td>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Impedit itaque, cumque consequuntur</td>
                    <td><img src="#" alt=""></td>
                    <td><i class="fa-regular fa-trash-can fa-1x"></i></td>
                    <td><i class="fa-regular fa-clipboard fa-1x"></i></td>
                    <td><i class="fa-regular fa-pen-to-square fa-1x"></i></td>
                </tr>
                <tr>
                    <td>Wall Painting</td>
                    <td>Renovations and Remodeling</td>
                    <td>in-house</td>
                    <td>Available</td>
                    <td>R800.00</td>
                    <td>12-10-2023</td>
                    <td>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Impedit itaque, cumque consequuntur</td>
                    <td><img src="#" alt=""></td>
                    <td><i class="fa-regular fa-trash-can fa-1x"></i></td>
                    <td><i class="fa-regular fa-clipboard fa-1x"></i></td>
                    <td><i class="fa-regular fa-pen-to-square fa-1x"></i></td>

                </tr>
            </tbody>
        </table>
    </div>
</div>
    <div class="album py-1 bg-light">
        <div class="container">
        @if (services != null)
        {
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3 m-auto">
                @foreach(var service in @services)
                {                   
                    <MyService serviceModel="@service">

                    </MyService>
                }                
            </div>
        }
        </div>
    </div>


@code {
    IList<ServiceModel>? services;
    string? ErrorMsg;



    enum ServiceTypes{
        Indoor,
        Outdoor,
    }

    enum TaskTypes
    {
        Collect,
        Inhouse,
        Remote,
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            services = await _serviceEP.GetServices();    

        }catch(Exception ex)
        {
            ErrorMsg = ex.Message;
        }
    }

    
    void ViewServiceDetails(ServiceModel s)
    {
        NavManager.NavigateTo(NavManager.GetUriWithQueryParameters("servicist",new Dictionary<string, object>()
        {
                ["serviceModel"] = s
             
        }));
    }
}
