@page "/register-services"

@inject IBusinessEndPoint _businessHLP
@inject IServiceEndpoint _servicesEP
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthStateProvider


@if(provider!=null )
{
    <div class="row">
        <!--Member's services-->
        <div class="col">
                @if (ProviderModelProperty != null)
                {
        
                    
                        <div >
                        <button id="newMemberInButton" class="btn btn-lg btn-outline-dark" @onclick="AssignServicesToProvider" data-bs-toggle="collapse" data-bs-target="#memberInfoCollapse@(provider.employeeProfile.Names)" aria-expanded="false" aria-controls="memberInfoCollapse@(provider.employeeProfile.Names)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-check" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm1.679-4.493-1.335 2.226a.75.75 0 0 1-1.174.144l-.774-.773a.5.5 0 0 1 .708-.708l.547.548 1.17-1.951a.5.5 0 1 1 .858.514ZM11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" />
                            <path d="M8.256 14a4.474 4.474 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10c.26 0 .507.009.74.025.226-.341.496-.65.804-.918C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4s1 1 1 1h5.256Z" />
                        </svg>
                        @if (provider.Services!=null)
                        {
                            <span class="badge text-bg-secondary">@provider.Services.Count</span>
                        }
                                   
                        @provider.employeeProfile.Names + @provider.employeeProfile.Surname
                            </button>
                            <div class="collapse multi-collapse border-0" id="memberInfoCollapse@(provider.employeeProfile.Names)">
                                <div class="card card-body border-0">
                                    @if (provider.Services != null && provider.Services.Count > 0)
                                    {
                                        <ul>
                                            @foreach (var s in provider.Services)
                                            {
                                                <li>
                                                    @s.name, @s.category.description
                                                    <a class="btn btn-sm border-0 btn-outline-danger" @onclick="@(()=>RemoveService(s,provider))">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                                                        </svg>
                                                    </a>
                                                        
                                                </li>
                                            }

                                        </ul>
                                           
                                    }
                                    else
                                    {
                                        <p>0 services added</p>
                                    }
                                    <button class="btn btn-primary" @onclick="@(()=>SaveServices(provider))" >
                                        Add
                                        <span class="badge text-bg-secondary">@selectedServices.Count</span>
                                    </button>
                                </div>
                            </div>
                            <div>
                                   
                            </div>
                               
                        </div>
                    
                }
            </div>
        <!--End Member's Service-->

        <!--Services-->
        <div class="col">
                
            <h4 class="font-monospace">
                Pick a Service
            </h4>

            @if (IsOnSelectService)
            {
                <div class="row d-flex">
                    <div class="col">

                        @if (services != null)
                        {


                            <div class="list-group w-auto shadow" style="height:250px;overflow-y:scroll">
                                @if (services.Count == 0)
                                {
                                    <div>
                                        <p>Loading...</p>
                                    </div>
                                }
                                else
                                {
                                    @foreach (var service in services)
                                    {
                                        <div class="list-group">
                                            <button @onclick="@(()=>AddToNewServices(service))" class="list-group-item  d-flex gap-3 py-3 btn">
                                                <img src="https://github.com/twbs.png" alt="twbs" width="32" height="32" class="rounded-circle flex-shrink-0">
                                                <div class="d-flex gap-2 w-100 justify-content-between">
                                                    <div>
                                                        <h6 class="mb-0">@service.name</h6>
                                                        <p class="mb-0 opacity-75">@service.category.description</p>
                                                    </div>
                                                    <small class="opacity-50 text-nowrap">now</small>
                                                </div>
                                            </button>
                                        </div>
                                    }

                                }


                            </div>
                        }
                        <hr />

                        <!--End provider's added services-->
                    </div>
                </div>
            }
       
                
        </div>
        <!--End Services-->
          

                
    </div>

    <div class="row">
        @if (IsOnSelectService)
        {
            <div class="form-control">

                <button @onclick="@(()=>OnSaveServices.InvokeAsync(selectedServices))" class="btn btn-primary">

                    Save

                </button>


            </div>
        }
       
    </div>
    }




<!--End Business accordion-->
@code {


    string? ErrorMsg;
    bool IsOnSelectService;
    
    private ServiceProviderModel? provider;
    IList<ServiceModel>? services;
    List<ServiceModel>? selectedServices = new()!;

    [Parameter]
    public ServiceProviderModel? ProviderModelProperty { get { return provider; } set {provider=value; } }

    [Parameter]
    public EventCallback<List<ServiceModel>> OnSaveServices { get; set; }



    protected override async Task OnInitializedAsync()
    {
        services = await _servicesEP.GetServices();
        IsOnSelectService = false;
    }


   

    void AssignServicesToProvider()
    {
        if (selectedServices.Count > 0) selectedServices.Clear();
        IsOnSelectService = true;

    }

    void SaveServices(ServiceProviderModel provider)
    {
        if(selectedServices.Count>0)
        {   
            provider.Services.AddRange((IEnumerable<ServiceModel>)selectedServices);
            IsOnSelectService = false;

        }
    }

    void AddToNewServices(ServiceModel service)
    {            
        if (service != null)
        {   
            selectedServices.Add(service);
            services.Remove(service);
        }

    }

    void RemoveService(ServiceModel service,ServiceProviderModel provider)
    {
        if(provider!=null && service != null)
        {
            if(provider.Services.Contains(service))
            {
                provider.Services.Remove(service);
            }
        }
    }

}

