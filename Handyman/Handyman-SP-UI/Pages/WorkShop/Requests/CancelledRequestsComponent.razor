@page "/cancelled-requests"
@page "/cancelled-rs"

@using HandymanProviderLibrary.Models;
@using Handyman_SP_UI.Pages.Helpers;

@inject IRequestHelper _requestHelper
@inject IProviderHelper _providerHelper
@inject NavigationManager NavManager

<AuthorizeView>
    
    <Authorized>

    <h3 class="font-monospace text-danger"> Cancelled Requests Component</h3>
            
      @if (requests != null)
      {


        <div class="album py-5">
            <div class="container">

            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3" >


                @if (requests.Count > 0)
                {
                    @foreach (RequestModel cancelled in requests)
                    {
                        <Handyman_SP_UI.Pages.WorkShop.Requests.CancelledRequestComponent CancelledRequest="@cancelled" />

                        
                       @* <div class="col p-0 m-0" @onclick="@(()=>viewCancelledRequests(cancelled.req_id))">
                           
                        </div>*@
                    }
                }
                @if (requests.Count==0)
                {
                    <span class=" text-danger strik">No cancelled jobs...</span>
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                        </div>
                    </div>
                }

                </div>
            </div>
        </div>
      
      }
     
    </Authorized>

     

</AuthorizeView>


@code {


    private List<RequestModel>? requests;

    
    protected override async Task OnInitializedAsync()
    {
        try
        {              
            string? Uid = (await _providerHelper.GetProvider()).employeeId;
            if (Uid != null)
            {
                requests = new()!;
                requests = (await _requestHelper.GetCancelledRequests(Uid)).ToList();
            }
        }
        catch (Exception ex)
        {   
            throw new Exception(ex.Message,ex.InnerException);
            NavManager.NavigateTo("error",true);
        }

    }


    void viewCancelledRequests(int id)
    {
        NavManager.NavigateTo(NavManager.GetUriWithQueryParameters("cancelled-r", new Dictionary<string, object>()
            {
                ["CRId"] = id,

        }));
    }

}
