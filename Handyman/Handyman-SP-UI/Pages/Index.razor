@page "/"

@using Handyman_SP_UI.Pages.Services
@using Microsoft.AspNetCore.Components.Web

@inject NavigationManager NavManager
@inject IRequestHelper _requestHelper
@inject IBusinessHelper _businessHelper

<AuthorizeView>

<Authorized>
@if(newRequests != null)
{
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">       
        <div class="btn-toolbar mb-2 mb-md-0">
          <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
            <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
          </div>
          <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <span data-feather="calendar" class="align-text-bottom"></span>
            This week
          </button>
        </div>
      </div>
      <!--Table-->
      <div class="table-responsive">
    <table class="table table-striped table-sm table-hover table-responsive">
          <!--Table header-->
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">status</th>
              <th scope="col">Date placed</th>
              <th scope="col">Category</th>
              <th scope="col">Task title</th>
            </tr>
          </thead>
          <!--Table body-->
          <tbody>
            <!--Rows-->
            @foreach (var nr in @newRequests)
            {
                <tr onclick="@(()=> viewRequest(@nr.Id))">
                    <!--Onclick test-->
                    <td>@nr.Id</td>
                    <td>@nr.status</td>
                    <td>@nr.datecreated</td>
                    <td>@nr.service.category</td>
                    <td>@nr.Tasks.ElementAt(0).title</td>
                </tr>
            }
            
 
            <!--End rows-->
          </tbody>
          <!--End body-->
        </table>
        <!--End table-->
      </div>
 <div class="b-example-divider b-example-vr"></div>

  }else
  {
        <ServicesAlbum>

        </ServicesAlbum>
  }
   </Authorized>
    <NotAuthorized>
        <ServicesAlbum>

        </ServicesAlbum>
    </NotAuthorized>
    </AuthorizeView>

@code{

    List<OrderModel>? newRequests;
    ServiceProviderModel? provider;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            provider = await _businessHelper.GetProvider();
            newRequests = new()!;
            if (provider != null)
                
            foreach (var service in provider.Services)
            {
                newRequests.AddRange(await _requestHelper.GetNewRequests(service.id));
            }
            
        }catch(Exception ex)
        {
            throw new Exception(ex.Message, ex.InnerException);   
        }
    }

    void viewRequest(int id)
    {
        NavManager.NavigateTo(NavManager.GetUriWithQueryParameters("request", new Dictionary<string, object>()
        {
            ["id"] = id    
        }));   
    }
}