@page "/routable-chat"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Components.Web
@inject NavigationManager NavManager
@implements IAsyncDisposable

<PageTitle>Counter</PageTitle>

<div class="form-group">
    <label>
        User: <input @bind="userInput"/>
    </label> 

</div>
<div class="form-group">
    <label>
        Message: <input @bind="messageInput"/>
    </label> 

</div>
<button @onclick="Send" disabled=@(IsConnected == false )>Send</button> 
<hr/>
<ul>
    @foreach(string message in messages)
    {
        <li>@message</li>
    }
</ul>
@code {
    private HubConnection? hubConnection;
    private List<string> messages = new();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithAutomaticReconnect()
        .Build();

        //CLient Side / Receiver message    
        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var formattedMessage = $"{user}: {message}";
            messages.Add(formattedMessage);
            InvokeAsync(StateHasChanged);

        });

        await hubConnection.StartAsync();

    }

    private async Task Send()
    {
        await hubConnection.SendAsync("SendMessage", userInput, messageInput);
    }
    private bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            hubConnection.DisposeAsync();   
        }
    }
}   
