@using HandymanUILibrary.API.Consumer
@using Handymen_UI_Consumer.Helpers
@using HandymanUILibrary.Models
@using Handymen_UI_Consumer.Pages.Orders
@using Microsoft.AspNetCore.Identity
@using Handymen_UI_Consumer.Areas.Identity.Data
@using Handymen_UI_Consumer.Pages


@inject SignInManager<Handymen_UI_ConsumerUser> SignInManager
@inject IOrderHelper _orderHelper;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Identity/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/Identity/css/site.css" />
   
    <link rel ="stylesheet" href="./css/features.css"/>
    <link rel ="stylesheet" href="./css/carousel.css"/>
    <link rel="stylesheet" href="./assets/dist/css/calenda.css" />
    
</head>



<body>
    <!--NavBar-->
    <header class="p-3 sticky-top bg-light bg-opacity-75">
    <div class="container">
      <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
          <!--Home Icon/ Logo-->
          
          <a class="navbar-brand box-shadow rounded-circle m-0 p-0 bg-transparent" asp-area="" asp-page="/Index">
            <svg xmlns="http://www.w3.org/2000/svg" width="45px" height="45px" fill="currentColor" class="bi bi-wrench-adjustable-circle-fill" viewBox="0 0 16 16">
                <path d="M6.705 8.139a.25.25 0 0 0-.288-.376l-1.5.5.159.474.808-.27-.595.894a.25.25 0 0 0 .287.376l.808-.27-.595.894a.25.25 0 0 0 .287.376l1.5-.5-.159-.474-.808.27.596-.894a.25.25 0 0 0-.288-.376l-.808.27.596-.894Z" />
                <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Zm-6.202-4.751 1.988-1.657a4.5 4.5 0 0 1 7.537-4.623L7.497 6.5l1 2.5 1.333 3.11c-.56.251-1.18.39-1.833.39a4.49 4.49 0 0 1-1.592-.29L4.747 14.2a7.031 7.031 0 0 1-2.949-2.951ZM12.496 8a4.491 4.491 0 0 1-1.703 3.526L9.497 8.5l2.959-1.11c.027.2.04.403.04.61Z" />
            </svg>
                    
        </a>
                <a href="/" class="d-flex align-items-center box-shadow rounded-5 mb-3 mb-lg-0 me-lg-auto text-dark text-decoration-none btn-outline-light">
                    <span class="fs-4 py-2 box-shadow rounded-5 bg-transparent text-dark px-2">Handyman</span>
                </a>
    
                
                @if (SignInManager.IsSignedIn(User))
                {
                    var orders = await _orderHelper.LoadUserOrders(SignInManager.UserManager.GetUserId(User));

                    @if (orders!=null)
                    {
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end sticky-top">
                            <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">

                                    @orders.Count() <!--Total number of Orders-->

                                    <span class="visually-hidden">unread messages</span>
                                </span>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-basket" viewBox="0 0 16 16">
                                    <path d="M5.757 1.071a.5.5 0 0 1 .172.686L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1v4.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 13.5V9a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h1.217L5.07 1.243a.5.5 0 0 1 .686-.172zM2 9v4.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V9H2zM1 7v1h14V7H1zm3 3a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3A.5.5 0 0 1 4 10zm2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3A.5.5 0 0 1 6 10zm2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3A.5.5 0 0 1 8 10zm2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 1 .5-.5zm2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 1 .5-.5z" />
                                </svg>
                            </button>
                        </div>

                    }
                }
                    <partial name="_LoginPartial" />
                </div>
    </header>
    <!--End NavBar-->
      <div class="b-example-divider"></div>


    <!--right Menu-->
    <div class="offcanvas offcanvas-end rounded" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
        <div class="offcanvas-header shadow bg-black bg-opacity-25 align-content-between border-bottom-3">
            <div class="container container-fluid">
              <!--Cancelled Orders Bin-->
                <a type="button" href="/cancelledorders" class="btn btn-primary position-relative bg-transparent btn-outline-danger border-0">
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                        <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                    </svg>
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            @_orderHelper.NumberOfCancelledRequests().Result
                            
                        }

                        <span class="visually-hidden">unread messages</span>
                    </span>
                </a>
                <!--End Bin-->
               
                <!--Orders In a Calenda Button-->
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-black bg-opacity-25 " data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar-event" viewBox="0 0 16 16">
                <path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z" />
                <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z" />
                </svg>
                </button>
                <!--End Calenda Button-->
                <button type="button" class="btn-close text-reset float-end align-content-end" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                
                <h5 id="offcanvasRightLabel" class="text-center shadow rounded">Orders </h5>
            </div>
            
        </div>
        
        
       <!--Order Components list Right-side-bar-->
        
    @if (SignInManager.IsSignedIn(User))
        {

            @if (_orderHelper == null)
            {
                <div class="card bg-dark text-white">
                    <img src="/Images/handymanGIF.gif" class="card-img" alt="gif image">
                    <div class="alert alert-danger" role="alert">
                        You Have Not Made Any Orders As Yet
                    </div>
                </div>
            }else 
            {
                     //Get orders
                var orders = await _orderHelper.LoadUserOrders(SignInManager.UserManager.GetUserId(User));
                   
                <div class="offcanvas-body" heightoverflow-y:scroll>
                 <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-root-margin="0px 0px -40%" data-bs-smooth-scroll="true" class="scrollspy-example bg-light p-3 rounded-2" tabindex="0">
                        
                     <!--No orders-->
                     @if(orders == null || orders.Count == 0)
                     {
                            <div class="card bg-dark text-white">
                                <img src="/Images/handymanGIF.gif" class="card-img" alt="gif image">
                                <div class="alert alert-danger" role="alert">
                                  No Orders Here...Create one
                                </div>
                            </div>

                        }else
                        {
                            if (orders.Count > 0)
                            {


                                @foreach (var order in orders)
                                {
                                     <!--Inprogress orders-->
                                    if (@order.status <= 2)
                                    {

                                        <div class="bg-secondary bg-opacity-25 shadow p-3 m-3 text-sm-center rounded-4" role="document" id="@order.Id">
                                                <component type="typeof(OrderComponent)" render-mode="ServerPrerendered" param-OrderComponentModel="@order" >
                                                <div class="justify-content-center">
                                                    <a href="/OrderDetails?id=@(order.Id)" class="btn btn-sm btn-outline-success p-2 m-2">Track Order</a>
                                                </div>
                                        </div>
                                    }

                                    if (@order.status >= 3)
                                    {
                                        @if (order.status == 3)
                                        {
                                           <!--Finished-->

                                            <div class="bg-warning bg-opacity-50 rounded-4 align-content-around text-sm-center p-3 m-3 shadow" role="document" id="@order.Id">
                                                @* <button type="button" class="btn-close" data-bs-toggle="modal" data-bs-target="#staticBackdropdeleteorder@(order.Id)" aria-label="Close"></button>*@
                                                <component type="typeof(OrderComponent)" render-mode="ServerPrerendered" param-OrderComponentModel="@order">
                                                    <div class="align-content-center ">
                                                        <a type="button" href="/OrderDetails?id=@(order.Id)" class="btn btn-md btn-info position-relative bg-success">
                                                            View
                                                            <span class="position-absolute top-0 start-100 translate-middle p-2 bg-light border border-light rounded-circle">
                                                                <span class="visually-hidden">New alerts</span>
                                                            </span>
                                                        </a>

                                                    </div>
                                            </div>
                                        }
                                        <!--Confirmed-->
                                        @if(order.status == 4)
                                        {
                                            <!--Header-->
                                            <div class="rounded-4 align-content-around text-sm-center p-3 m-3 shadow" role="document">
                                                <h2 class="fw-bold mb-0 font-monospace">@order.service.name</h2>
                                                <hr/>
                                                <!--icon-->
                                                <ul class="d-grid gap-4 my-5 list-unstyled">
                                                    <li class="d-flex gap-4">
                                                        <svg class="bi text-warning flex-shrink-0" width="48" height="48"><use xlink:href="#bookmark-star" /></svg>
                                                        <div>
                                                            @order.service.category.description
                                                        </div>
                                                    </li>
                                                </ul>
                                                <!--button-->
                                                <a type="button" href="/Payment/Checkout?id=@order.Id" class="btn bg-warning btn-outline-light position-relative ">
                                                    Checkout
                                                    <span class="position-absolute top-0 start-100 translate-middle p-2 bg-warning border border-light rounded-circle">
                                                        <span class="visually-hidden">New alerts</span>
                                                    </span>
                                                </a>
                                            </div>
                                                    
                                        }
                                        


                                    }

                                    ViewData["oid"] = order.Id;
                                    ViewData[$"name{order.Id}"] = order.service.name;
                                    ViewData[$"id{order.Id}"] = order.Id;
                                }
                            }
                     }
                </div>
             </div>
            }
    }
            <!--End Order Components list scrollabe-->

   </div>
    <!--end right menu-->

    <!--End NavBar-->


    <!--******Modals*******-->
    <!--Calenda Modal-->
    <!--Calenda Modal-->

    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 font-monospace" id="staticBackdropLabel">Pick a due date</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <!--Carousal-->
                    @*<div id="carouselExample" class="carousel slide">
                    <div class="carousel-inner">
                    @for(int i = 1; i<= (DateTime.DaysInMonth() * 12); i++)
                    {
                    <div class="carousel-item active">
                    <img src="..." class="d-block w-100" alt="...">
                    </div>
                    }


                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                    </button>
                    </div>*@
                    <!--End Carosal-->
                    <!--Calenda-->

                    <div class="month">
                        <ul>
                            <li class="prev">&#10094;</li>
                            <li class="next">&#10095;</li>
                            <li>
                                @(DateTime.Now.Date)<br>
                                <span style="font-size:18px">@DateTime.Now.Year</span>
                            </li>
                        </ul>
                    </div>

                    <ul class="weekdays">
                        <li>Mo</li>
                        <li>Tu</li>
                        <li>We</li>
                        <li>Th</li>
                        <li>Fr</li>
                        <li>Sa</li>
                        <li>Su</li>
                    </ul>

                    <ul class="days">
                        @for (int i = 1; i <= DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month); i++)
                        {
                            <li>@i</li>
                        }


                    </ul>


                    <!--End Calenda-->
                </div>
                
            </div>
        </div>
    </div>
    <!--End Calenda Modal-->




    <!--Delete order Confirmation Modal-->
 
  @if (SignInManager.IsSignedIn(User))
  {
    var ods = await _orderHelper.LoadUserOrders(SignInManager.UserManager.GetUserId(User));
    @if (ods!=null)
    {
            foreach (var order in ods)
            {
                <div>
                    <!--invoking the orderviewComponent-->
                    @await Component.InvokeAsync("Order",
                    new {
                            Id =  order.Id
                    })
                </div>

                @if(order.Tasks!=null && order.Tasks.Count != 0 && order.Id!=0)
                {
                    foreach (var item in order.Tasks)
                    {
                        @await Component.InvokeAsync("DeleteTask",
                        new {
                            Id =  order.Id
                        })
                    }
                   
                }

    }
        }
   
      
  }


    @{
        @await Component.InvokeAsync("OrderConfirmation")
    }
    <!--End Delete Modal-->


    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <div class="b-example-divider"></div>

<div class="container">
  <footer class="py-3 my-4">
    <ul class="nav justify-content-center border-bottom pb-3 mb-3">
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Home</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Features</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Pricing</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">FAQs</a></li>
      <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">About</a></li>
    </ul>
    <p class="text-center text-muted">&copy; 2022 Handyman, Inc</p>
  </footer>
</div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="_framework/blazor.server.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <persist-component-state />
</body>
</html>