@using Microsoft.AspNetCore.Identity


@inject AuthenticationStateProvider authStateProvider

<ul class="navbar-nav">
    @if ((await @authStateProvider.GetAuthenticationStateAsync()).User.Identity.IsAuthenticated)
{
        <div class="dropdown text-end m-3">
            <a href="#" class="d-block link-dark text-decoration-none dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                <img src="https://github.com/mdo.png" alt="mdo" width="32" height="32" class="rounded-circle">
            </a>
            @{

                var state = await @authStateProvider.GetAuthenticationStateAsync();
                <ul class="dropdown-menu text-small">
                    <li><p class="dropdown-header text-muted"> @state.User.Identity.Name!</p></li>
                <li><a id="manage" class="dropdown-item text-dark"  asp-page="/Account/Manage/Index" title="Manage">Profile</a></li>
                <li><a class="dropdown-item" href="#">Settings</a></li>
                <li><hr class="dropdown-divider"></li>
                 <form id="logoutForm" class="dropdown-itemform-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                    <button id="logout" type="submit" class="dropdown-item btn btn-link text-dark">Logout</button>
                </form>
              </ul>
            }
        </div>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="login"  asp-page="/Login">Login</a>
    </li>
}
</ul>
