@page "/order-tasks-component"
@using HandymanUILibrary.Models
@using Handymen_UI_Consumer.Helpers
@using Microsoft.AspNetCore.Components.Web
@inject IOrderHelper _orderHelper



<div class="row d-inline-flex m-0">

    @if (isNew)
    {
        <div class="col m-3">
        <!--New Task/task-item form-->

            <!--New task button-->
            <button class="btn-sm btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                task items
            </button>

            <!--End New task button-->

            <div class="collapse" id="collapseExample">
                <div class="card card-body">
                    <!--The following code can be found in the this address https://mdbootstrap.com/docs/standard/extended/to-do-list/#!-->


                    <div class="col">
                        <div class="card" id="list1" style="border-radius: .75rem; background-color: #eff1f2;">
                            <div class="card-body py-4 px-4 px-md-5">

                                <p class="h2 text-center mt-3 mb-4 pb-3 text-primary">
                                    <i class="fas fa-check-square me-1"></i>
                                    <u>Add task item</u>
                                </p>

                                <div class="pb-2">
                                    <div class="card">
                                        
                                        <div class="card-body">
                                                <div class="mb-1">
                                                    <input @bind="@newTask.title" type="text" class="form-control form-control" id="exampleFormControlInput1"
                                                        placeholder="taskItem Title...">
                                                </div>
                                                <div class="mb-1">
                                                    <textarea @bind="@newTask.description" class="form-control" id="exampleFormControlTextarea1" rows="3"  placeholder="Description..."></textarea>
                                                </div>
                                        </div>
                                        @*<div class="card-footer">
                                            <button  @onclick="CreateNewTask" class="btn btn-primary m-3">Add</button>
                                        </div>*@
                                       
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    
    }else
    {
        <div class="m-3 col ">


           

            <ul class="list-group list-group-horizontal rounded-0 bg-transparent">
                <li class="list-group-item d-flex align-items-center ps-0 pe-3 py-1 rounded-0 border-0 bg-transparent">
                    <div class="form-check">
                        <input class="form-check-input me-0" type="checkbox" value="" id="flexCheckChecked1"
                           aria-label="..." checked />
                    </div>
                </li>
                <li class="list-group-item px-3 py-1 d-flex align-items-center flex-grow-1 border-0 bg-transparent">
                    <p class="lead fw-normal mb-0">@task.title</p>
                </li>
               
            </ul>

            @if (@ErrorMsg != null) {
                <p>
                    @ErrorMsg
                </p>
            }



        </div>
    }

</div>
<!--End task-item -->

@code {
    TaskModel task = new()!;
    TaskModel newTask = new()!;
    string? ErrorMsg;


    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string? title { get; set; }
    [Parameter]
    public string? description { get; set; }
    [Parameter]
    public int duration { get; set; }
    [Parameter]
    public int status { get; set; }
    [Parameter]
    public bool isNew { get; set; }
    [Parameter]
    public int serviceId { get; set; }
    [Parameter]
    public DateTime dateStarted { get; set; }
    [Parameter]
    public DateTime dateFinished { get; set; }
         



    public TaskModel? NewTask
    {
        get { return newTask; }

    }


  

    
}
